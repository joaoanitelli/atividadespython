# -*- coding: utf-8 -*-
"""João Pedro Artero - 232_LP_Funcao_cs_m.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I-11DGabV9W3qJs3O3z64cWqhPG9U6IZ

### 1. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia um número e o multiplique por 2 retornando o resultado e o apresente.
"""

def multiplicar():
    numero = int(input('Digite um valor: '))
    resultado = numero * 2
    return resultado

def main():
    print('entrei na main')
    r = multiplicar()
    print('Resultado com uma variável: ',r)

main()

def multiplicar():
    numero = int(input("Insira um número: "))
    resultado = numero * 2
    return resultado

def main():
    print('Entrei na main')
    r = multiplicar()
    print(r)
main()

"""### 2. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método para subtrair dois números, retornar o resultado e o apresentando."""

def calculo():
    numero1 = int(input("Insira um numero: "))
    numero2 = int(input("Insira outro numero: "))
    resultado = numero1 - numero2
    return resultado

def main():
    print(calculo())
main()

"""### 3. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia a base e a altura de um triângulo e retorne/apresente sua área A = (base x altura)/2."""

def calculo():
    base = int(input("Insira a base do triângulo: "))
    altura = int(input("Insira a altura do triângulo: "))
    resultado = (base * altura) / 2
    return resultado
def main():
    print(calculo())
main()

"""### 4. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método que leia o lado de um quadrado e retorne sua área, area = lado²."""

def calculo():
    lado = int(input("Insira o valor do lado de um quadrado: "))
    resultado = lado ** 2
    return resultado

def main():
    print("A área do quadrado é de:",calculo())
main()

"""###5. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método  que verifique se um número é par, retorne mostrando a str/string ‘É par’ ou se ‘É ímpar’."""

def verificar():
    numero = int(input("Insira um número: "))
    if numero % 2 == 0:
        return 'É par'
    else:
        return 'É ímpar'
def main():
    print(verificar()) #print é uma função e tudo que vai dentro do print é um parametro
main()                 #print não tem a palavra return dentro da def, a função range tem

"""###6. (Função com retorno sem parâmetro) Faça um programa contendo uma função/método  que verifique se um número é par, retorne/mostre o valor bool **True** para par e **False** para ímpar."""

def calculo():
    numero = int(input("Insira um número: "))
    return numero % 2 == 0

def main():
    print(calculo())
main()

"""### 7. (Função com retorno sem parâmetro) Faça uma função/método que leia e armazene 5 elementos inteiros no vetor A, deverá ser gerado um vetor B, de mesmo tamanho, que armazenará o fatorial de cada elemento de A. Não use função pronta de cálculo de fatorial. Retorne/apresente o vetor B."""

# Exemplo:
# A = [5  ,4 ,3,2,1]
# B = [120,24,6,2,1]

def calculo():
    vetor_a = []
    vetor_b = []
    for i in range(5):
        vetor_a.append(int(input("Insira o valor: ")))
        fatorial = 1
        for numero in range(1,vetor_a[i] + 1):
            fatorial = fatorial * numero
        vetor_b.append(fatorial)
    return vetor_a,vetor_b
def main():
    print(calculo())
main()

# Exemplo:
# A = [5  ,4 ,3,2,1]
# B = [120,24,6,2,1]
# i significa indice que são os elementos dentro do vetor

def calculo():
    vetor_a = []
    vetor_b = []
    for i in range(5):
        vetor_a.append(int(input("Insira o valor: ")))
        fatorial = 1
        for numero in range(1,vetor_a[i] + 1):
            fatorial = fatorial * numero
        vetor_b.append(fatorial)
    return vetor_a,vetor_b
def main():
    print(calculo())
main()

"""### 8. (Função com retorno sem parâmetro) Faça uma função/método retorne um vetor com os três primeiros números perfeitos. Sabe-se que um número é perfeito quando é igual a soma de seus divisores (exceto ele mesmo).
Exemplo: os divisores de 6 são 1, 2 e 3, e 1 + 2 + 3 = 6, logo 6 é perfeito. Não use função pronta.

1º número perfeito: 6

2º número perfeito: 28

3º número perfeito: 496
"""

# número 1 não é perfeito
# ...
# número 4 não é perfeito, exemplo: 4 % 1 == 0, 4 % 2 == 0, 4 % 3 != 0, a soma
# resulta em 2
# ...
# número 6 é perfeito  6 % 1 == 0, 6 % 2 == 0, 6 % 3 == 0, 6 % 4 != 0, 6 % 5 != 0
# quando é perfeito a soma de seus divisores da o mesmo valor de número que é 6

#for n in range (1, 497)
#    div outro laço de repetição 1 até n:
#        desenvolva a lógica aqui

def verificar_numero_perfeito(numero):
    soma_divisores = 0
    for i in range(1, numero):
        if numero % i == 0:
            soma_divisores += i
    return soma_divisores == numero

def encontrar_numeros_perfeitos():
    numeros_perfeitos = []
    numero = 1
    while len(numeros_perfeitos) < 3:
        if verificar_numero_perfeito(numero):
            numeros_perfeitos.append(numero)
        numero += 1
    return numeros_perfeitos

# Chamando a função para encontrar os três primeiros números perfeitos
primeiros_perfeitos = encontrar_numeros_perfeitos()

# Exibindo os resultados
for i, numero in enumerate(primeiros_perfeitos):
    print(f"{i+1}º número perfeito: {numero}")

"""### 9. (Função com retorno sem parâmetro) Foi realizada uma pesquisa sobre algumas características físicas de cinco habitantes de uma região. Foram coletados os seguintes dados de cada habitante: idade, sexo (M - masculino ou F - feminino), cor dos olhos (A - azuis ou C - castanhos), cor dos cabelos (L - louros, P - pretos ou C - castanhos).

1.   Faça uma função/método que leia esses dados, armazenando-os em vetores (listas);
2.   Faça uma função/método que determine e devolva a função principal a média de idades das pessoas com olhos castanhos e cabelos pretos;
3. Faça uma função/método que determine e devolva a função principal a maior idade entre os habitantes;
4.  Faça uma função/método que determine e devolva a função principal a quantidade de indivíduos do sexo feminino com idade entre 18 e 35 anos(inclusive) e que tenham olhos azuis e cabelos louros.

"""

# Declarar os vetores antes de qualquer programação, indica que
# que estas variáveis serão globais a todo o restante do programa
# e das funções
idade = []
sexo = []
olho = []
cabelo = []

def cadastrar():
...
...
def main():
    t
main()